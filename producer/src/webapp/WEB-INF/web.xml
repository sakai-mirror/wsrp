<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>sakai-wsrp-producer</display-name>
	<description>Sakai WSRP Producer</description>

	<!--
 		This is to provide IP Address/Host based access restriction that may be used to 
 		limit access to trusted WSRP consumers, in the absence of another way to secure
 		access to WSRP Producer.
 		
 		Alternatively, if the WSRP Consumer supports HTTP Basic Auth, you may choose to 
 		use that. See the security-constraint element at the end of this file.
	-->
	<filter>
		<filter-name>RemoteHostFilter</filter-name>
		<filter-class>
			org.sakaiproject.util.RemoteHostFilter
		</filter-class>
		<description>
			Filters (allows/denies) requests based on configured
			hostname/ip-address
		</description>
		<init-param>
			<param-name>allow</param-name>
			<!-- Allow "Private Use" IP addresses by default -->
			<param-value>
				localhost, 127\.0\.0\.1, 192\.168\.[0-9.]+, 10\.[0-9.]+,
				172\.1[6-9]\.[0-9.]+, 172\.2[0-9]\.[0-9.]+,
				172\.3[0-1]\.[0-9.]+
			</param-value>
		</init-param>
		<init-param>
			<param-name>log-allowed</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>deny</param-name>
			<!-- No Explicit Denials, implies deny unless allowed -->
			<param-value></param-value>
		</init-param>
		<init-param>
			<param-name>log-denied</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<servlet>
		<servlet-name>wsrp4j</servlet-name>
		<servlet-class>
			org.apache.axis.transport.http.AxisServlet
		</servlet-class>
	</servlet>

	<filter-mapping>
		<filter-name>RemoteHostFilter</filter-name>
		<servlet-name>wsrp4j</servlet-name>
	</filter-mapping>

	<servlet-mapping>
		<servlet-name>wsrp4j</servlet-name>
		<url-pattern>/wsrp4j/*</url-pattern>
	</servlet-mapping>

	<!-- To have correct axis wsdl links -->
	<servlet-mapping>
		<servlet-name>wsrp4j</servlet-name>
		<url-pattern>/services/*</url-pattern>
	</servlet-mapping>

	<!-- Added to allow Tomcat to serve the CONTENT-TYPE header when serving WSDL files -->
	<mime-mapping>
		<extension>wsdl</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>
	<mime-mapping>
		<extension>xsd</extension>
		<mime-type>text/xml</mime-type>
	</mime-mapping>

	<!-- 		 
		Uncomment this to require WSRP Consumers to present HTTP Basic Auth credentials
		when using this Sakai Service. 
		
		To add trusted users, edit trusted-consumers.xml file. The role may be used to 
		identify the codebase of the client as a hint to the flavor of the client we are dealing 
		with.
		
		We only protect wsrp4j which is where all WSRP code is mapped.
		and we only need to guard the POST method.
		
		GET requests are harmless for WSRP, since everything Sakai specific is always POST'ed 
	-->

<!--  
	<security-constraint>
		<web-resource-collection>
			<web-resource-name>Sakai WSRP Producer</web-resource-name>
			<url-pattern>/wsrp4j/*</url-pattern>
			<http-method>POST</http-method>
		</web-resource-collection>
		<auth-constraint>
			<role-name>uportal</role-name>
		</auth-constraint>
	</security-constraint>

	<login-config>
		<auth-method>BASIC</auth-method>
		<realm-name>Sakai WSRP Producer</realm-name>
	</login-config>

	<security-role>
		<description>
			An example role defined in trusted-consumers.xml
		</description>
		<role-name>uportal</role-name>
	</security-role>
-->
</web-app>
